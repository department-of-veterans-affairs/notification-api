# copy from portal; this will need to be adjusted for notification-api.  
# pushing now to create a draft PR

name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Release type
        required: true
        default: minor
        options:
          - major
          - minor
          - patch

jobs:
  create-release:
    name: "Tag and generate release"
    runs-on: ubuntu-latest
    outputs:
      git-tag: ${{ steps.tag_version.outputs.new_tag }}
      ecr_repo: "releases_notification_portal"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Find the latest tag and increment
        id: tag_version
        run: |
          # Get latest tag
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Previous tag: $TAG"

          # Split the tag into 'v' prefix and version number
          PREFIX="${TAG%%[0-9]*}"
          VERSION="${TAG#$PREFIX}"

          # Increment the version number
          IFS='.' read -ra ADDR <<< "$VERSION"
          MAJOR=${ADDR[0]:-0}
          MINOR=${ADDR[1]:-0}
          PATCH=${ADDR[2]:-0}
          echo "Generating tag for ${{ github.event.inputs.type }} release"
          case ${{ github.event.inputs.type }} in
            major)
              let MAJOR+=1
              MINOR=0
              PATCH=0
              ;;
            minor)
              let MINOR+=1
              PATCH=0
              ;;
            patch)
              let PATCH+=1
              ;;
            *)
              echo "Invalid release type!"
              exit 1
              ;;
          esac
          NEW_TAG="${PREFIX}$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"

          # Set the new tag as an output of this step
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          NEW_TAG=${{ steps.tag_version.outputs.new_tag }}
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create Release with Autogenerated Notes
        run: |
          NEW_TAG=${{ steps.tag_version.outputs.new_tag }}
          TODAY=$(date +"%d %b %Y")
          RELEASE_TITLE="${NEW_TAG} - ${TODAY}"
          RESPONSE=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\": \"$NEW_TAG\", \"name\": \"$RELEASE_TITLE\", \"generate_release_notes\": true }")
          echo "Created release with title: $RELEASE_TITLE"

      - name: Create summary
        run: |
          echo "## Deploying ${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_STEP_SUMMARY

  cypress-testrails:
    needs: [create-release]
    uses: ./.github/workflows/cypress_test_rails.yml
    with:
      ref: "${{ needs.create-release.outputs.git-tag }}"
    secrets: inherit

  build-release-container:
    needs: [create-release]
    uses: ./.github/workflows/build_container.yml
    with:
      ecr_repo: "${{ needs.create-release.outputs.ecr_repo }}"
      ref: "${{ needs.create-release.outputs.git-tag }}"
    secrets: inherit

  deploy-perf:
    needs: [create-release, cypress-testrails, build-release-container]
    uses: ./.github/workflows/deploy_container.yml
    with:
      env: "perf"
      ecr_repo: "${{ needs.create-release.outputs.ecr_repo }}"
      ref: "${{ needs.create-release.outputs.git-tag }}"
    secrets: inherit

  deploy-staging:
    needs: [create-release, deploy-perf]
    uses: ./.github/workflows/deploy_container.yml
    with:
      env: "staging"
      ecr_repo: "${{ needs.create-release.outputs.ecr_repo }}"
      ref: "${{ needs.create-release.outputs.git-tag }}"
    secrets: inherit

  deploy-prod:
    needs: [create-release, deploy-staging]
    uses: ./.github/workflows/deploy_container.yml
    with:
      env: "prod"
      ecr_repo: "${{ needs.create-release.outputs.ecr_repo }}"
      ref: "${{ needs.create-release.outputs.git-tag }}"
    secrets: inherit

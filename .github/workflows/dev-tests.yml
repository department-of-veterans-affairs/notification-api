name: Running Tests

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or Commit"
        type: string
        required: true
  workflow_call:
    inputs:
      ref:
        description: "Branch or Commit"
        type: string
        required: true

env:
  PYTHONDONTWRITEBYTECODE: 1
  REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
  PORT: 6011
  POETRY_ARGS: "--with static_tools,test"
  POETRY_HOME: "/opt/poetry" 
  POETRY_VIRTUALENVS_IN_PROJECT: 1 
  POETRY_NO_INTERACTION: 1

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: notification_api
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Build Docker Image for Testing
        run: |
          docker build \
            --build-arg POETRY_ARGS="--with static_tools,test" \
            --build-arg TEST_FOLDER=tests \
            -t notification-api-test \
            -f ci/Dockerfile .
  
      - name: Run tests in Docker container
        run: |
          docker run --rm --network=host notification-api-test sh -c "\
            export PATH=\$(pwd)/.venv/bin:\$PATH && \
            sed -i 's/LocalPassword@db:5432/postgres@localhost/g' .env && \
            make test"

  # code-scan:
  #   runs-on: ${{ vars.RUNS_ON }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ inputs.ref }}
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"
  #     - run: make check-vulnerabilities

  # dependency-scan:
  #   runs-on: ${{ vars.RUNS_ON }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ inputs.ref }}
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"
  #     - run: make check-dependencies

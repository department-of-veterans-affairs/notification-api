name: Semantic Versioning

on: 
  push:
    branches:
      - 1727-cd-pipeline-versioning
  workflow_call:
    inputs:
      create-tag:
        type: boolean
        default: false

jobs:
  summary_for_qa:
    if: ${{ !inputs.create-tag }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Post QA Summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.VAR_PAT }}
          script: |
            const path = '.github/scripts/postQA.js';
            const { generatePRSummary } = require(path);
            generatePRSummary({github, context, core});

  create_and_post_tag:
    # if: ${{ inputs.create-tag }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.new_version.outputs.value }}
    steps:
      - uses: actions/checkout@v4
      - name: Create and Post Tag
        id: new_version
        run: echo "::set-output name=new_version::2.2.2-test"

        # uses: actions/github-script@v7
        # with:
          # github-token: ${{ secrets.VAR_PAT }}
          # script: |
            # const path = '.github/scripts/createAndPushTag.js';
            # const { createAndPushTag } = require(path);
            # createAndPushTag({github, context, core});

  update_release_version_variable:
    # if: create_and_post_tag
    needs: create_and_post_tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4 

      - name: Echo the output from the previous job
        run: echo "The output was ${{ needs.create_and_post_tag.outputs.new_version }}"
      # get this to output the new_version value

      # - name: Print RELEASE_VERSION
        # run: |
          # echo "Release Version is ${{ needs.new_}}"
          # gh variable set RELEASE_VERSION --body "{{ env.NEW_RELEASE_VERSION }}"


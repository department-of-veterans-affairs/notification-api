name: Run regression tests

on:
  workflow_call:
    inputs:
      environment:
        description: "Notification-api deployment environment to test (dev|perf|staging)"
        default: "perf"
        required: true
        type: string
      qa-image-branch:
        description: "Will run latest SHA from branch"
        default: "master"
        required: true
        type: string

jobs:
  pull-and-run-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.qa-image-branch }}

      - name: Configure VAEC AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.VAEC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VAEC_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Login to VAEC ECR
        id: login-ecr-vaec
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: QA regression test - public endpoints
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-vaec.outputs.registry }}
        run: |
          aws ssm get-parameter --name /notification-api-qa/env --with-decryption | jq '.Parameter.Value' -r > .env

          #sudo chgrp qa-container .env
          chmod 640 .env

          #aws --region us-gov-west-1 ecr get-login-password | docker login --username AWS --password-stdin "$ECR_REGISTRY" 2>/dev/null

          docker pull ${{ env.ECR_REGISTRY }}/notification_api_qa:master 1>/dev/null

          docker logout '$ECR_REGISTRY'

          docker run --rm --name qa_container \
          -v $(pwd)/.env:/home/qa-container/.env \
          "$ECR_REGISTRY/notification_api_qa:master" \
          #pytest -ra -v tests/ --basetemp=/tmp/pytest_cache \
          pytest -ra -v tests/test_organizations.py --platform local \
          --environment '${{ inputs.environment }}' \
          --platform hosted

          #docker image prune -a -f 1>/dev/null


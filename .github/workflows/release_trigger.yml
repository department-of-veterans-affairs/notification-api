name: Release Trigger
on:
  release:
    types: [published]

jobs:
  setup-release:
    runs-on: ubuntu-latest
    outputs:
      git-tag: ${{ steps.tag.outputs.version }}
      env: ${{ steps.setup.outputs.environment }}
    steps:
      - name: Setup Environment
        id: setup
        uses: actions/github-script@v5
        with:
          script: |
            if (context.payload.release.prerelease) {
              core.setOutput('environment', 'staging')
            } else {
              core.setOutput('environment', 'prod')
            }

      - name: Get the version
        id: tag
        run: |
          echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Env Values
        run: |
          echo "The environment is ${{ steps.setup.outputs.environment }}"
          echo "The tag is ${{ steps.tag.outputs.version }}"

  run-build:
    needs: [setup-release]
    uses: ./.github/workflows/build.yml
    with:
      environment: "${{ needs.setup-release.outputs.env }}"
      ref: "${{ needs.setup-release.outputs.git-tag }}"
    secrets: inherit

  run-lambda-deploy:
    needs: [setup-release]
    uses: ./.github/workflows/lambda-functions.yml
    with:
      environment: "${{ needs.setup-release.outputs.env }}"
      ref: "${{ needs.setup-release.outputs.git-tag }}"
      lambdaName: "All"
    secrets: inherit

  run-deployment:
    needs: [setup-release, run-build]
    uses: ./.github/workflows/deployment.yml
    with:
      environment: "${{ needs.setup-release.outputs.env }}"
      ref: "${{ needs.setup-release.outputs.git-tag }}"
    secrets: inherit
